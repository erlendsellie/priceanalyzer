{
  "config": {
    "step": {
      "user": {
        "title": "Basic Setup",
        "description": "Configure the basic settings for your PriceAnalyzer sensor. Select your region and currency to get started.",
        "data": {
          "region": "Region",
          "currency": "Currency (leave empty for default)",
          "VAT": "Include VAT in prices",
          "time_resolution": "Time Resolution"
        },
        "data_description": {
          "region": "Select your electricity price region (e.g., NO1, SE3, DK1)",
          "currency": "Override the default currency for your region if needed",
          "VAT": "Include Value Added Tax in the displayed prices",
          "time_resolution": "Choose between hourly or quarterly (15-minute) price updates"
        }
      },
      "price_settings": {
        "title": "Price Settings",
        "description": "Configure how prices are displayed and calculated. You can add additional costs like grid fees and customize the price format.",
        "data": {
          "price_type": "Price Format",
          "price_in_cents": "Display prices in cents/øre",
          "low_price_cutoff": "Low Price Threshold",
          "additional_costs": "Additional Costs Template"
        },
        "data_description": {
          "price_type": "Display price per kWh, MWh, or Wh",
          "price_in_cents": "Show prices in cents/øre instead of main currency unit",
          "low_price_cutoff": "Multiplier for determining low price periods (1.0 = average price)",
          "additional_costs": "Jinja2 template to add fixed costs, grid fees, etc. Example: {{0.50|float}} adds 0.50 to each price"
        }
      },
      "advanced_settings": {
        "title": "Advanced Settings",
        "description": "Fine-tune the PriceAnalyzer behavior with advanced options for price corrections, boost/save hours, and activation thresholds.",
        "data": {
          "multiply_template": "Price Correction Template",
          "hours_to_boost": "Hours to Boost",
          "hours_to_save": "Hours to Save",
          "pa_price_before_active": "PriceAnalyzer Activation Threshold",
          "percent_difference": "Minimum Daily Price Variation (%)",
          "price_before_active": "Hot Water Activation Threshold"
        },
        "data_description": {
          "multiply_template": "Jinja2 template to multiply/correct prices. Use 'correction' variable. Example: {{correction * 1.25}}",
          "hours_to_boost": "Number of cheapest hours to boost consumption",
          "hours_to_save": "Number of most expensive hours to reduce consumption",
          "pa_price_before_active": "Minimum max daily price before PriceAnalyzer sensor activates (in your currency)",
          "percent_difference": "Minimum percentage difference between daily min/max price to activate features",
          "price_before_active": "Minimum max daily price before Hot Water optimization activates (in your currency)"
        }
      },
      "hot_water": {
        "title": "Hot Water Temperature Control",
        "description": "Configure hot water heater temperatures for different price scenarios. The system will automatically adjust based on electricity prices.",
        "data": {
          "temp_default": "Default Temperature (°C)",
          "temp_five_most_expensive": "5 Most Expensive Hours (°C)",
          "temp_is_falling": "Price Falling (°C)",
          "temp_five_cheapest": "5 Cheapest Hours (°C)",
          "temp_ten_cheapest": "10 Cheapest Hours (°C)",
          "temp_low_price": "Low Price Periods (°C)",
          "temp_not_cheap_not_expensive": "Normal Price Periods (°C)",
          "temp_minimum": "Minimum Daily Price (°C)"
        },
        "data_description": {
          "temp_default": "Default temperature when no special conditions apply",
          "temp_five_most_expensive": "Reduce temperature during the 5 most expensive hours to save energy",
          "temp_is_falling": "Temperature when price trend is falling",
          "temp_five_cheapest": "Boost temperature during the 5 cheapest hours",
          "temp_ten_cheapest": "Temperature during the 10 cheapest hours",
          "temp_low_price": "Temperature during low price periods (below threshold)",
          "temp_not_cheap_not_expensive": "Temperature during normal price periods",
          "temp_minimum": "Maximum temperature at minimum daily price"
        }
      }
    },
    "error": {
      "name_exists": "Name already exists",
      "invalid_template": "The template is invalid, check https://github.com/custom-components/nordpool"
    }
  },
  "options": {
    "step": {
      "basic_setup": {
        "title": "Basic Setup",
        "description": "Configure the basic settings for your PriceAnalyzer sensor. Select your region and currency to get started.",
        "data": {
          "region": "Region",
          "currency": "Currency (leave empty for default)",
          "VAT": "Include VAT in prices",
          "time_resolution": "Time Resolution"
        },
        "data_description": {
          "region": "Select your electricity price region (e.g., NO1, SE3, DK1)",
          "currency": "Override the default currency for your region if needed",
          "VAT": "Include Value Added Tax in the displayed prices",
          "time_resolution": "Choose between hourly or quarterly (15-minute) price updates"
        }
      },
      "price_settings": {
        "title": "Price Settings",
        "description": "Configure how prices are displayed and calculated. You can add additional costs like grid fees and customize the price format.",
        "data": {
          "price_type": "Price Format",
          "price_in_cents": "Display prices in cents/øre",
          "low_price_cutoff": "Low Price Threshold",
          "additional_costs": "Additional Costs Template"
        },
        "data_description": {
          "price_type": "Display price per kWh, MWh, or Wh",
          "price_in_cents": "Show prices in cents/øre instead of main currency unit",
          "low_price_cutoff": "Multiplier for determining low price periods (1.0 = average price)",
          "additional_costs": "Jinja2 template to add fixed costs, grid fees, etc. Example: {{0.50|float}} adds 0.50 to each price"
        }
      },
      "advanced_settings": {
        "title": "Advanced Settings",
        "description": "Fine-tune the PriceAnalyzer behavior with advanced options for price corrections, boost/save hours, and activation thresholds.",
        "data": {
          "multiply_template": "Price Correction Template",
          "hours_to_boost": "Hours to Boost",
          "hours_to_save": "Hours to Save",
          "pa_price_before_active": "PriceAnalyzer Activation Threshold",
          "percent_difference": "Minimum Daily Price Variation (%)",
          "price_before_active": "Hot Water Activation Threshold"
        },
        "data_description": {
          "multiply_template": "Jinja2 template to multiply/correct prices. Use 'correction' variable. Example: {{correction * 1.25}}",
          "hours_to_boost": "Number of cheapest hours to boost consumption",
          "hours_to_save": "Number of most expensive hours to reduce consumption",
          "pa_price_before_active": "Minimum max daily price before PriceAnalyzer sensor activates (in your currency)",
          "percent_difference": "Minimum percentage difference between daily min/max price to activate features",
          "price_before_active": "Minimum max daily price before Hot Water optimization activates (in your currency)"
        }
      },
      "hot_water": {
        "title": "Hot Water Temperature Control",
        "description": "Configure hot water heater temperatures for different price scenarios. The system will automatically adjust based on electricity prices.",
        "data": {
          "temp_default": "Default Temperature (°C)",
          "temp_five_most_expensive": "5 Most Expensive Hours (°C)",
          "temp_is_falling": "Price Falling (°C)",
          "temp_five_cheapest": "5 Cheapest Hours (°C)",
          "temp_ten_cheapest": "10 Cheapest Hours (°C)",
          "temp_low_price": "Low Price Periods (°C)",
          "temp_not_cheap_not_expensive": "Normal Price Periods (°C)",
          "temp_minimum": "Minimum Daily Price (°C)"
        },
        "data_description": {
          "temp_default": "Default temperature when no special conditions apply",
          "temp_five_most_expensive": "Reduce temperature during the 5 most expensive hours to save energy",
          "temp_is_falling": "Temperature when price trend is falling",
          "temp_five_cheapest": "Boost temperature during the 5 cheapest hours",
          "temp_ten_cheapest": "Temperature during the 10 cheapest hours",
          "temp_low_price": "Temperature during low price periods (below threshold)",
          "temp_not_cheap_not_expensive": "Temperature during normal price periods",
          "temp_minimum": "Maximum temperature at minimum daily price"
        }
      }
    },
    "error": {
      "name_exists": "Name already exists",
      "invalid_template": "The template is invalid, check https://github.com/custom-components/nordpool"
    }
  }
}
